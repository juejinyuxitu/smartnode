FROM golang:1.21.8-bookworm AS smartnode_dependencies

# Install build tools
RUN dpkg --add-architecture arm64
RUN apt update && apt install -y \
	build-essential \
	gcc-aarch64-linux-gnu \
	libc6-dev-arm64-cross\
	g++-aarch64-linux-gnu \
	wget

# Cache go dependencies
COPY ./go.work /src/go.work
COPY ./go.work.sum /src/go.work.sum
COPY ./addons/go.mod /src/addons/go.mod
COPY ./bindings/go.mod /src/bindings/go.mod
COPY ./rocketpool/go.mod /src/rocketpool/go.mod
COPY ./rocketpool-cli/go.mod /src/rocketpool-cli/go.mod
COPY ./shared/go.mod /src/shared/go.mod
COPY ./treegen/go.mod /src/treegen/go.mod
WORKDIR /src
RUN go mod download -x
WORKDIR /
RUN rm -rf /src

FROM smartnode_dependencies AS build
ARG TARGETARCH
ARG VERSION
COPY ./go.work /src/go.work
COPY ./go.work.sum /src/go.work.sum
COPY ./addons/ /src/addons/
COPY ./bindings/ /src/bindings/
COPY ./rocketpool/ /src/rocketpool/
COPY ./rocketpool-cli/ /src/rocketpool-cli/
COPY ./shared/ /src/shared/
COPY ./treegen/ /src/treegen
COPY Makefile /src/Makefile
WORKDIR /src
RUN --mount=type=cache,target=/root/.cache/go-build make NO_DOCKER=true \
	build/${VERSION}/bin/rocketpool-daemon-linux-${TARGETARCH} \
	build/${VERSION}/bin/rocketpool-cli-linux-${TARGETARCH} \
	build/${VERSION}/bin/treegen-linux-${TARGETARCH}

FROM debian:bookworm-slim AS smartnode
ARG TARGETARCH
ARG VERSION

RUN apt update && apt install ca-certificates -y

COPY --from=build /src/build/${VERSION}/bin/rocketpool-daemon-linux-${TARGETARCH} /go/bin/rocketpool
COPY --from=build /src/build/${VERSION}/bin/rocketpool-cli-linux-${TARGETARCH} /go/bin/rocketpool-cli
COPY --from=build /src/build/${VERSION}/bin/treegen-linux-${TARGETARCH} /go/bin/treegen

ENV PATH="$PATH:/go/bin"

# Default entry point
ENTRYPOINT ["/go/bin/rocketpool"]
